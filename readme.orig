vimdb 1.0 - simple Database with Vim

release Notes:
I fixed many many bugs :P, many vim keys now behave very intuetively,
but it is still possible to break the table, so watch your steps.

description:
This plugin is useful to store data in a database like Arangement

WARNING
1.) The development stage of the script has advanced, but i still will
    not recommend to store important data to a *.vimdb table.
2.) The script sets the global variable "virtualedit" to "all", this
    may cause problems in conjunction with other scripts (see :h
    virtualedit)
3.) Beware that a lot of autocommands are in use; look into the
    script, to see, where they apply.

Note:
1.) Have a look at example database which may be shipped with the
    script!
2.) If you encounter something you'd like to report (bug or something
    like this) write me a mail, i will collect bugs and maybe once
    clear them out.

short introduction:
Create a *.vimdb file and open it with Vim. Notice, that two windows
will open, the "table view" on the left and the "record view" on the 
right. The table view will show your database in the normal table 
layout, the record view will show the actual record, the cursor is 
currently over (in an empty database, of course, you will see two 
empty windows).
Move the cursor into the record view and press "o" or "O" to create a
new table column. Name the column and press ESC, a new column will be
created on the left side in the table view. Repeat that several times.
Now, after creating some columns, switch back to table view and create
a new record by pressing "o".
Now hit TAB; it will put the cursor into record view and start insert
mode at the first entry. Edit entry and hit TAB again. Now hit TAB
until you'll get back to table view.
Congratulations, you created a new database


useful mappings:
  
  In record view:
  "o", "O" - append/insert a new column 
  "yy"     - copy column
  "dd"     - cut column
  "p", "P" - append/insert a cut column
  
  In table view:
  "o", "O" - append/insert a new record
  "yy"     - copy record
  "dd"     - cut record
  "p", "P" - append/insert a cut record

Improved mapping for TAB since 0.5
TAB is now the key to the heart of your database. Whilst in table
view, it will take you to the first entry of record view, clearing it
out for new input. If you type in something, it'll change the entry,
otherwise not. Hitting TAB again will bring you to the next record,
and so on, until you get to the last record and from that back to
table view, or until you hit ESC, what will of course get you back to
normal mode.
Note, that this feature won't work for the first line of you table
(the header with the colnames).
